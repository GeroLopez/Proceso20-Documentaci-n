<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
		<meta name="Título" content=""/>
		<meta name="Asunto" content=""/>
		<meta name="Categoría" content=""/>
		<meta name="Palabras clave" content=""/>
		<meta name="Descripción" content=""/>
		<meta name="Autor" content="Gero"/>
		<meta name="Director" content=""/>
		<meta name="Compañía" content=""/>

		<title>Diagrama Proceso20 2.0</title>
		<script src="Diagrama Proceso20 2.0_archivos/frameset.js" type="text/javascript" language="javascript"></script>
		<script type="text/javascript" language="javascript" >

function FileEntry (pageIndex, pageID, pageName, priImage, secImage) 
{
	this.PageIndex = pageIndex;
	this.PageID	  = pageID;
	this.PageName = pageName;
	this.PriImage = priImage;
	this.SecImage = secImage;
}

var viewMgr = null;

var g_FileList = new  Array(
 new FileEntry (1, 5, "Diagramas específicos Proceso20", "xaml_1.htm", "png_1.htm"),
 new FileEntry (2, 0, "Form1_Load", "xaml_2.htm", "png_2.htm"),
 new FileEntry (3, 6, "bMas_Click", "xaml_3.htm", "png_3.htm"),
 new FileEntry (4, 7, "listBox2_SelectedIndexChanged", "xaml_4.htm", "png_4.htm"),
 new FileEntry (5, 8, "bcla_Click", "xaml_5.htm", "png_5.htm"),
 new FileEntry (6, 9, "listBox1_SelectedIndexChanged", "xaml_6.htm", "png_6.htm"),
 new FileEntry (7, 10, "best_MouseDown", "xaml_7.htm", "png_7.htm"),
 new FileEntry (8, 11, "boEsta_Click", "xaml_8.htm", "png_8.htm"),
 new FileEntry (9, 12, "boTodas_Click", "xaml_9.htm", "png_9.htm"),
 new FileEntry (10, 13, "bozoom_Click", "xaml_10.htm", "png_10.htm"),
 new FileEntry (11, 14, "boclaizq_MouseDown", "xaml_11.htm", "png_11.htm"),
 new FileEntry (12, 15, "bocladil_MouseDown", "xaml_12.htm", "png_12.htm"),
 new FileEntry (13, 16, "boclader_MouseDown", "xaml_13.htm", "png_13.htm"),
 new FileEntry (14, 17, "boclaenc_MouseDown", "xaml_14.htm", "png_14.htm"),
 new FileEntry (15, 18, "panelEsta_MouseDown", "xaml_15.htm", "png_15.htm"),
 new FileEntry (16, 20, "butfech_Click", "xaml_16.htm", "png_16.htm"),
 new FileEntry (17, 21, "bopep_MouseDown", "xaml_17.htm", "png_17.htm"),
 new FileEntry (18, 22, "panel1a_MouseDown", "xaml_18.htm", "png_18.htm"),
 new FileEntry (19, 23, "panel1a_MouseMove", "xaml_19.htm", "png_19.htm"),
 new FileEntry (20, 24, "panel1a_MouseUp", "xaml_20.htm", "png_20.htm"),
 new FileEntry (21, 25, "panel1_MouseMove", "xaml_21.htm", "png_21.htm"),
 new FileEntry (22, 26, "panel1_MouseDown", "xaml_22.htm", "png_22.htm"),
 new FileEntry (23, 27, "panel1_MouseUp", "xaml_23.htm", "png_23.htm"),
 new FileEntry (24, 28, "panelcladib_MouseDown", "xaml_24.htm", "png_24.htm"),
 new FileEntry (25, 29, "panelcladib_MouseUp", "xaml_25.htm", "png_25.htm"),
 new FileEntry (26, 30, "panelcladib_MouseMove", "xaml_26.htm", "png_26.htm"),
 new FileEntry (27, 31, "boXcod_Click", "xaml_27.htm", "png_27.htm"),
 new FileEntry (28, 32, "panelAmp_MouseUp", "xaml_28.htm", "png_28.htm"),
 new FileEntry (29, 33, "bovar_Click", "xaml_29.htm", "png_29.htm"),
 new FileEntry (30, 34, "boPSW_Click", "xaml_30.htm", "png_30.htm"),
 new FileEntry (31, 35, "boScilab_Click", "xaml_31.htm", "png_31.htm"),
 new FileEntry (32, 36, "boInv_Click", "xaml_32.htm", "png_32.htm"),
 new FileEntry (33, 37, "panel1_Paint", "xaml_33.htm", "png_33.htm"),
 new FileEntry (34, 38, "panel1a_Paint", "xaml_34.htm", "png_34.htm"),
 new FileEntry (35, 39, "Dibujo panelcoda", "xaml_35.htm", "png_35.htm"),
 new FileEntry (36, 40, "panelAmp_Paint", "xaml_36.htm", "png_36.htm"),
 new FileEntry (37, 41, "boFc_MouseDown", "xaml_37.htm", "png_37.htm"),
 new FileEntry (38, 42, "boPolo_MouseDown", "xaml_38.htm", "png_38.htm"),
 new FileEntry (39, 43, "boFiltro_MouseDown", "xaml_39.htm", "png_39.htm"),
 new FileEntry (40, 44, "Filtros", "xaml_40.htm", "png_40.htm"),
 new FileEntry (41, 45, "Filtros coda", "xaml_41.htm", "png_41.htm"),
 new FileEntry (42, 46, "boClaSola_Click", "xaml_42.htm", "png_42.htm"),
 new FileEntry (43, 47, "boTremor_MouseDown", "xaml_43.htm", "png_43.htm"),
 new FileEntry (44, 48, "boAnalogico_Click", "xaml_44.htm", "png_44.htm"),
 new FileEntry (45, 49, "boNano_Click", "xaml_45.htm", "png_45.htm"),
 new FileEntry (46, 50, "Form1_KeyPress", "xaml_46.htm", "png_46.htm"),
 new FileEntry (47, 51, "backgroundWorker1_DoWork", "xaml_47.htm", "png_47.htm"),
 new FileEntry (48, 52, "splitContainer1_Panel1_MouseUp", "xaml_48.htm", "png_48.htm"),
 new FileEntry (49, 53, "checkBoxLogEsp_CheckedChanged", "xaml_49.htm", "png_49.htm"),
 new FileEntry (50, 54, "Métodos Espectro", "xaml_50.htm", "png_50.htm"),
 new FileEntry (51, 55, "boStartMpt_Click", "xaml_51.htm", "png_51.htm"),
 new FileEntry (52, 56, "Movimiento de partículas", "xaml_52.htm", "png_52.htm"),
 new FileEntry (53, 57, "boModX_Click", "xaml_53.htm", "png_53.htm"),
 new FileEntry (54, 58, "boNeic_MouseDown", "xaml_54.htm", "png_54.htm"),
 new FileEntry (55, 59, "textBoxNeic_TextChanged", "xaml_55.htm", "png_55.htm"),
 new FileEntry (56, 60, "panelMapaMundo_Paint", "xaml_56.htm", "png_56.htm"),
 new FileEntry (57, 61, "Botones de filtros", "xaml_57.htm", "png_57.htm"),
 new FileEntry (58, 62, "boResFiltX_Click", "xaml_58.htm", "png_58.htm"),
 new FileEntry (59, 63, "botones rata de muestreo interpolación", "xaml_59.htm", "png_59.htm"),
 new FileEntry (60, 64, "panelInterP_MouseUp", "xaml_60.htm", "png_60.htm"),
 new FileEntry (61, 65, "casillas verificación para grabar trazas interpoladas", "xaml_61.htm", "png_61.htm"),
 new FileEntry (62, 66, "boGraInterpol_Click", "xaml_62.htm", "png_62.htm"),
 new FileEntry (63, 67, "boIntegra_MouseDown", "xaml_63.htm", "png_63.htm"),
 new FileEntry (64, 68, "checkBoxFiltAlta_CheckedChanged", "xaml_64.htm", "png_64.htm"),
 new FileEntry (65, 69, "boFrInterp_MouseDown", "xaml_65.htm", "png_65.htm"),
 new FileEntry (66, 70, "boFIR_MouseDown", "xaml_66.htm", "png_66.htm"),
 new FileEntry (67, 71, "boFilBaj_Click", "xaml_67.htm", "png_67.htm"),
 new FileEntry (68, 72, "boFilAlt_Click", "xaml_68.htm", "png_68.htm"),
 new FileEntry (69, 73, "boFilBan_Click", "xaml_69.htm", "png_69.htm"),
 new FileEntry (70, 74, "boDerMpt_MouseDown", "xaml_70.htm", "png_70.htm"),
 new FileEntry (71, 75, "boIzqMpt_MouseDown", "xaml_71.htm", "png_71.htm"),
 new FileEntry (72, 76, "boEspCla_MouseDown", "xaml_72.htm", "png_72.htm"),
 new FileEntry (73, 77, "panelDR_Paint", "xaml_73.htm", "png_73.htm"),
 new FileEntry (74, 78, "panelDR_MouseUp", "xaml_74.htm", "png_74.htm"),
 new FileEntry (75, 79, "boTarCarga_MouseDown", "xaml_75.htm", "png_75.htm"),
 new FileEntry (76, 80, "checkBoxHz_CheckedChanged", "xaml_76.htm", "png_76.htm"),
 new FileEntry (77, 81, "textBoxUT_TextChanged", "xaml_77.htm", "png_77.htm"),
 new FileEntry (78, 82, "boTarAux_Click", "xaml_78.htm", "png_78.htm"),
 new FileEntry (79, 4, "Varios en común", "xaml_79.htm", "png_79.htm")

);

var g_CurPageIndex = 0;
var g_ZoomLoaded = false;
var g_WidgetsLoaded = false;
var g_FileProtocol = "file://";

var g_HLMenuEntry = "menuEntry";
var g_HLMenuEntryDiv = "menuEntryDiv";

var g_LoadingWidgets = false;

var isSVG = g_FileList[g_CurPageIndex].PriImage.indexOf("svg") >= 0;
var isVML = g_FileList[g_CurPageIndex].PriImage.indexOf("vml") >= 0;
var isXAML = g_FileList[g_CurPageIndex].PriImage.indexOf("xaml") >= 0;

function CViewMgr(convertedImgID, highlightDivID)
{
	this.onResize = null;
	this.ApplyZoom = null;
	this.ChangingView = false;

	this.put_Location = ViewMgrDefaultFind;
	this.Zoom = ViewMgrDefaultResize;
	this.PostZoomProcessing = null;
	this.setView = null;
	this.PostSetViewProcessing = null;
	this.viewChanged = null;

	this.SupportsDetails = false;
	this.SupportsSearch = false;

	this.visBBoxLeft = 0.0;
	this.visBBoxRight = 0.0;
	this.visBBoxBottom = 0.0;
	this.visBBoxTop = 0.0;

	this.highlightDiv = null;
	this.stepWidth = 10;

	this.id = convertedImgID;
	this.zoomFactor = -1;
	this.zoomLast = -1;
	this.origWH = 1;
	this.origWidth = 100;	
	this.aspectRatio = 1;

	this.docDrawing = null;
	var docDrawing = frmDrawing.document;
	if(docDrawing)
	{
		this.docDrawing = docDrawing;
		var docEl = docDrawing.getElementById(this.id);
		if (!docEl)
			docEl = docDrawing.childNodes[0];
		
		this.s = docEl.style;
		this.origWidth = this.s.pixelWidth;
		this.origWH = this.s.pixelWidth / this.s.pixelHeight;
		
		this.highlightDiv = docDrawing.getElementById(highlightDivID);
	}

	this.loadPage = DefPageLoad;
	this.getPNZ	= null;
}

function DefPageLoad (pageIndex)
{
	if (pageIndex >= 0)
	{
		var curPath = frmDrawing.location.href;
		var fileDelim = curPath.lastIndexOf ('/');
        if (fileDelim == -1)
            fileDelim = curPath.lastIndexOf ('\\');
		var newPath = curPath.substring (0, fileDelim + 1);
		newPath += g_FileList[pageIndex].PriImage;
		frmDrawing.location.href = newPath;

		SetPNZDisplay (pageIndex);
	}
}

function CurPageUpdate (pageIndex)
{
	if (pageIndex >= 0)
	{
		g_CurPageIndex = pageIndex;

		SetCurPageInGoto (pageIndex);

		var divDetails = frmToolbar.document.getElementById("divDetails");
		if (divDetails)
		{
			var displayStatus = "block";
			if (!viewMgr || !viewMgr.SupportsDetails)
			{
				displayStatus = "none";
			}

			divDetails.style.display = displayStatus;
		}

		var divSearch = frmToolbar.document.getElementById("divSearch");
		if (divSearch)
		{
			var displayStatus = "block";
			if (!viewMgr || !viewMgr.SupportsSearch)
			{
				displayStatus = "none";
			}

			divSearch.style.display = displayStatus;
		}

		SetPNZDisplay (pageIndex);

		LoadZoom ();
	}
}

function FramePageLoaded ()
{
	if (isUpLevel && viewMgr == null)
	{
		var curPath = frmDrawing.location.href;
		var fileDelim = curPath.lastIndexOf ('/');
		if (fileDelim >= 0)
		{
			var fileName = curPath.substring (fileDelim + 1, curPath.length);
			var pageIndex = PageIndexFromFileName (fileName);
			SetCurPageInGoto (pageIndex);
			SetPNZDisplay (pageIndex);
		}
	}
}

function LoadZoom ()
{
	var zoomWidget = frmToolbar.frames["ifrmPNZ"];
	if (zoomWidget)
	{
		if (g_ZoomLoaded)
		{
			zoomWidget.findContent();
			PageLoadedDoCallback ();
		}
		else
		{
			window.setTimeout("LoadZoom()", 500);
		}
	}
	else
	{
		PageLoadedDoCallback ();
	}
}

function SetCurPageInGoto (pageIndex)
{
	var gotoPageSelect = frmToolbar.document.getElementById("Select1");
	if (gotoPageSelect != null)
	{
		gotoPageSelect.value = pageIndex;
	}
}

function SetPNZDisplay (pageIndex)
{
	var divPNZ = frmToolbar.document.getElementById("divPNZ");
	if (divPNZ)
	{
		var displayStatus = "block";
		if (g_FileList[pageIndex].PageID < 0)
		{
			displayStatus = "none";
		}

		divPNZ.style.display = displayStatus;
	}
}

function ViewMgrDefaultFind()
{
	return;
}

function ViewMgrDefaultResize(size)
{
	return;
}



g_callBackFunctionArray = new Array();
function PageLoadedDoCallback()
{
	if (g_WidgetsLoaded)	
	{
		for( var i=0; i < g_callBackFunctionArray.length; i++ )
		{
			g_callBackFunctionArray[i]();
		}
		g_callBackFunctionArray = new Array();
	}
	else
	{
		window.setTimeout("PageLoadedDoCallback()", 500);
	}
}


function ParseParams (strRawParams)
{
	if ( strRawParams != null && strRawParams.length > 0 )
	{
		strRawParams = strRawParams.substring(1);

		var arrayParamTokens = strRawParams.split('&');
		for (var count = 0; count < arrayParamTokens.length; count++)
		{
			arrayParamTokens[count] = unescape(arrayParamTokens[count]);
			this[count] = arrayParamTokens[count].substring(0, arrayParamTokens[count].indexOf('='));
			this[this[count]] = arrayParamTokens[count].substring(arrayParamTokens[count].indexOf('=') + 1);
		}
	}
	else
	{
		this[0] = null;
	}
	return this;
}

var gParams = ParseParams (location.search);

var g_PageParamValue = gParams['page'];
if (g_PageParamValue != null && 
	g_PageParamValue.length > 0)
{
	var pageIndex = PageIndexFromName (g_PageParamValue);
	if (pageIndex > 0 && pageIndex < g_FileList.length)
	{
		g_CurPageIndex = pageIndex;
	}
}
else
{
	g_PageParamValue = null;
}

var g_FirstPageToLoad = g_PageParamValue;

var g_ZoomParamValue = gParams['zoom'];
if (g_ZoomParamValue != null && g_ZoomParamValue.length > 0)
{
	g_ZoomParamValue = 1.0 * g_ZoomParamValue;
	if (g_ZoomParamValue >= 10 && g_ZoomParamValue <= 500)
	{
		g_callBackFunctionArray[g_callBackFunctionArray.length] = function () { if (viewMgr && viewMgr.Zoom) { viewMgr.Zoom(g_ZoomParamValue); } };
	}
}

var g_ShapeParamValue = gParams['shape'];
if (g_ShapeParamValue != null && g_ShapeParamValue.length > 0)
{
	if (g_PageParamValue != null && g_PageParamValue.length > 0)
	{
		g_callBackFunctionArray[g_callBackFunctionArray.length] = function () { var shapeNode = FindShapeXMLByName (g_PageParamValue, g_ShapeParamValue); if (shapeNode) { frmToolbar.TreeSelect (g_FileList[g_CurPageIndex].PageID, shapeNode.attributes.getNamedItem ("ID").text); } };
	}
	else
	{
		g_ShapeParamValue = null;
	}
}

var g_SearchParamValue = gParams['search'];
if (g_SearchParamValue != null && g_SearchParamValue.length > 0)
{
	g_callBackFunctionArray[g_callBackFunctionArray.length] = function () { if (frmToolbar.theForm) { frmToolbar.theForm.findString.value = g_SearchParamValue; } };
	g_callBackFunctionArray[g_callBackFunctionArray.length] = function () { var goButton = frmToolbar.document.getElementById('GoButton'); if(goButton) { goButton.click(); } };
}


var strHLTooltipText = "Haga clic para seguir el hipervínculo.";
var strPropsTooltipText = "Use Ctrl+clic para ver los detalles.";

var strFocusHLTooltipText = "Use Entrar para seguir el hipervínculo.";
var strFocusPropsTooltipText = "Use Ctrl+Entrar para ver los detalles.";


function UpdateTooltip (element, pageID, shapeID)
{
	if (isUpLevel)
	{
		var strHL, strProps;
	
		if(frmDrawing.event.type == "focus")
		{
			strHL = strFocusHLTooltipText;
			strProps = strFocusPropsTooltipText;
		}
		else
		{
			strHL = strHLTooltipText;
			strProps = strPropsTooltipText;
		}

		var strTooltip = "";
		if (element.origTitle)
		{
			strTooltip = element.origTitle.toString();
		}
			
		var shapeNode = FindShapeXML (pageID, shapeID);

		if( shapeNode != null )
		{
			var propColl = SelectNodes(shapeNode, "Prop");
			if (propColl != null && propColl.length > 0)
			{
				if (strTooltip.length > 0)
				{
					strTooltip += "\n";
				} 
				strTooltip += strProps;
			}
		}

		var hlObj = GetHLAction (shapeNode, pageID, shapeID);
		if (hlObj != null && (hlObj.DoFunction.length > 0 || hlObj.Hyperlink.length > 0))
		{
			if (strTooltip.length > 0)
			{
				strTooltip += "\n";
			}	
			strTooltip += strHL;
		}

		element.title = strTooltip;
		if (element.alt != null)
		{
			element.alt = strTooltip;
		}
	}
}


function GetHLAction (shapeNode, pageID, shapeID)
{
	var hlObj = new HLObj ("", "", "", false);

	if (shapeNode != null)
	{
		try
		{
			var hlColl = SelectNodes(shapeNode, "Scratch/B/SolutionXML/HLURL:Hyperlinks/HLURL:Hyperlink");
		}
		catch(err)
		{
			var hlColl = [];
		}

		if (hlColl.length > 1)
		{
			if(window.frmDrawing.event)
			{
				hlObj.DoFunction = "showMenu(" + pageID + ", " + shapeID + ");"
			}
			else // XAML
			{
				// Use default hyperlink to set the action
				var fFoundDefault = false;
				for (var count = 0; count < hlColl.length; ++count)
				{
					var hlDefault = SelectSingleNode(hlColl[count], "HLURL:Default/text()");
					if (hlDefault != null && hlDefault.nodeValue.length > 0 &&
						hlDefault.nodeValue == "1" /*Indicates that this is the default hyperlink <HLURL:Default>1</HLURL:Default>*/)
					{
						hlObj = CreateHLObj(hlColl[count]);
						fFoundDefault = true;
						break;
					}
				}
				
				if (!fFoundDefault)
					hlObj = CreateHLObj(hlColl[0]);
			}
		}
		else if (hlColl.length == 1)
		{
			hlObj = CreateHLObj (hlColl[0]);
		}
	}

	return hlObj;
}

function HLObj (strHyperlink, strDoFunction, strDesc, newWindow) 
{
	this.Hyperlink = strHyperlink;
	this.DoFunction = strDoFunction;
	this.Desc = strDesc;
	this.NewWindow = newWindow;
}

function clickMenu()
{
	var e = window.frmDrawing.event;
	var menu = frmDrawing.document.getElementById("menu1")
	
	if (menu != null && menu.style.display != "none")
	{
		menu.style.display="none";

		if (e && e.srcElement && e.srcElement.doFunction != null)
		{
			eval(e.srcElement.doFunction);
		}
	}
}

function toggleMenuDiv(el, highlight) 
{
	var divEl = el;
	var aEl = null;

	var ID = el.id.substring (g_HLMenuEntryDiv.length, el.id.length) * 1.0;
	aEl = frmDrawing.document.getElementById(g_HLMenuEntry + ID);

	toggleMenu(divEl, aEl, highlight);
}

function toggleMenuLink(el, highlight) 
{
	var divEl = null;
	var aEl = el;

	var ID = el.id.substring (g_HLMenuEntry.length, el.id.length) * 1.0;
	divEl = frmDrawing.document.getElementById(g_HLMenuEntryDiv + ID);

	toggleMenu(divEl, aEl, highlight);
}

function toggleMenu(divEl, aEl, highlight)
{
	if (highlight)
	{
	  divEl.className="highlightItem";
	  aEl.className="highlightItem";
	} 
	else 
	{
	  divEl.className="menuItem";
	  aEl.className="menuItem";
	}
}

function showMenu(pageID, shapeID)
{
	var shapeXML = FindShapeXML (pageID, shapeID);
	if (shapeXML != null)
	{
		CreateHLMenu (shapeXML);
		var menu = frmDrawing.document.getElementById("menu1");
		if (menu != null)
		{
			menu.style.visibility = "hidden";
			menu.style.display = "inline";

            var clientWidth = frmDrawing.document.body.clientWidth;
		    var clientHeight = frmDrawing.document.body.clientHeight;

		    var menuWidth = menu.clientWidth;
		    var menuHeight = menu.clientHeight;
		    
		    var doc = frmDrawing.document;
		    
			var e = window.frmDrawing.event;
			if(e)
			{
			    var elem = e.srcElement;

			    var menuLeft = e.x;
			    var menuTop = e.y;
    			
			    var img = doc.getElementById("ConvertedImage");
    			
			    if( (menuLeft + doc.body.scrollLeft < elem.offsetLeft) || (menuLeft + doc.body.scrollLeft > elem.offsetLeft + elem.offsetWidth + img.offsetLeft) )
			    {
				    menuLeft = elem.offsetLeft + img.offsetLeft + elem.offsetWidth/2;
			    }
    			
			    if( (menuTop + doc.body.scrollTop < elem.offsetTop) || (menuTop + doc.body.scrollTop > elem.offsetTop + elem.offsetHeight + img.offsetTop) )
			    {
				    menuTop = elem.offsetTop + img.offsetTop + elem.offsetHeight/2;
			    }

			    var scrollBarSize = 20;
			    if (menuLeft + menuWidth > clientWidth - scrollBarSize)
			    {
				    menuLeft = clientWidth - menuWidth - scrollBarSize;
			    }

			    if (menuTop + menuHeight > clientHeight - scrollBarSize)
			    {
				    menuTop = clientHeight - menuHeight - scrollBarSize;
			    }

				menu.style.posLeft = menuLeft + frmDrawing.document.body.scrollLeft;
				menu.style.posTop = menuTop + frmDrawing.document.body.scrollTop;
				menu.style.visibility = "visible";

				var firstLink = frmDrawing.document.getElementById(g_HLMenuEntry + "0");
				firstLink.focus ();
				
				if (e.keyCode == 13)
				{
					toggleMenuLink(firstLink, true);
				}

				e.cancelBubble = true;
			}
		}
	}
}

function MenuKeyDown ()
{
	var e = window.frmDrawing.event;
	var el = e.srcElement;

	if (e.keyCode == 27)	// 27 == ESC
	{
		clickMenu();
		e.cancelBubble = true;
		return;
	}

	var curSelID = el.id.substring (g_HLMenuEntry.length, el.id.length) * 1.0;
	var newSelID = -1;

	if (e.keyCode == 40)	// 40 == down arrow
	{
		newSelID = curSelID + 1;
	}
	else if (e.keyCode == 38) // 38 == up arrow
	{
		newSelID = curSelID - 1;
	}

	var newSelEntry = frmDrawing.document.getElementById(g_HLMenuEntry + newSelID);

	if (newSelEntry)
	{
		newSelEntry.focus();

		var curSelEntry = frmDrawing.document.getElementById(g_HLMenuEntry + curSelID);
		toggleMenuLink (curSelEntry, false);
		toggleMenuLink (newSelEntry, true);
	}

	e.cancelBubble = true;
}

function CreateHLMenu (shapeNode)
{
	var strHLMenuHTML = "";

	if (shapeNode != null)
	{
		var hlColl = SelectNodes(shapeNode, "Scratch/B/SolutionXML/HLURL:Hyperlinks/HLURL:Hyperlink");

		strHLMenuHTML = "<div class='innerhlMenu'>";

		var hlCount = hlColl.length;
		for (var count = 0; count < hlCount; count++)
		{
			var hlObj = CreateHLObj (hlColl[count]);
			if (hlObj != null)
			{
				if (hlObj.Desc.length > 0)
				{
					strHLMenuHTML += "<div id='" + (g_HLMenuEntryDiv + count) + "' class='menuItem' onmouseover='toggleMenuDiv(this, true)' onmouseout='toggleMenuDiv(this, false)' onclick='" + (g_HLMenuEntry + count) + ".click()'>";
					strHLMenuHTML += "<a href=";

					if (hlObj.DoFunction.length > 0)
					{
						strHLMenuHTML += "'javascript:" + hlObj.DoFunction + "'";
					}
					else
					{
						var targetVal = "_top";
						if (hlObj.NewWindow)
						{
							targetVal = "_blank";
						}
						strHLMenuHTML += "'" + hlObj.Hyperlink + "' target='" + targetVal + "'";
					}

					strHLMenuHTML += " class='menuItem' id='" + (g_HLMenuEntry + count) + "' onkeydown='parent.MenuKeyDown();' onmouseover='toggleMenuLink(this, true)' onmouseout='toggleMenuLink(this, false)'>";
					strHLMenuHTML += hlObj.Desc + "</a></div>";
				}
			}
		}
		
		strHLMenuHTML += "</div>";
	}

	var menu = frmDrawing.document.getElementById("menu1")
	menu.innerHTML = strHLMenuHTML;
}

function CreateHLObj (hlNode)
{
	var strAddress = "";
	var hlObj = new HLObj ("", "", "", false);

	if (hlNode != null)
	{
		var hlAddress = SelectSingleNode(hlNode,"HLURL:Address/text()");
		if (hlAddress != null && hlAddress.nodeValue.length > 0)
		{
			// Get AbsoluteURL
			var absoluteURL = SelectSingleNode(hlNode,"HLURL:AbsoluteURL/text()");
			var strAbsURL = "";
			if (absoluteURL != null && absoluteURL.nodeValue.length > 0)
				strAbsURL = absoluteURL.nodeValue;
			
			// Get Address
			var strAddr = hlAddress.nodeValue;

			// Use relative address if AbsoluteURL is missing
			if (strAbsURL == "")
			{
				strAddress = strAddr;
			}
			else if (strAbsURL.indexOf (g_FileProtocol) == 0)
			{
				var strAbsPath = strAbsURL.substring (g_FileProtocol.length, strAbsURL.length);
				strAbsPath.toLowerCase ();
				strAddr.toLowerCase ();
				if (strAbsPath == strAddr)
				{
					strAddress = strAbsPath;
				}
				else
				{
					strAddress = strAddr;

					var hlSubAddress = SelectSingleNode(hlNode,"HLURL:SubAddress/text()");
					if (hlSubAddress != null && hlSubAddress.nodeValue.length > 0)
					{
						strAddress += '#';
						strAddress += hlSubAddress.nodeValue;
					}

					var hlExtraInfo = SelectSingleNode(hlNode,"HLURL:ExtraInfo/text()");
					if (hlExtraInfo != null && hlExtraInfo.nodeValue.length > 0)
					{
						strAddress += '?';
						strAddress += hlExtraInfo.nodeValue;
					}
				}
			}
			else
			{
				strAddress = strAbsURL;
			}		

			strAddress = HTMLEscape (strAddress);
			hlObj.Hyperlink += strAddress;
		}
		else
		{
			hlAddress = SelectSingleNode(hlNode,"HLURL:SubAddress/text()");
			if (hlAddress != null && hlAddress.nodeValue.length > 0)
			{
				strAddress = hlAddress.nodeValue;

				var pageShapeSep = strAddress.lastIndexOf ('/');
				if (pageShapeSep > 0)
				{
					if (PageIndexFromName (strAddress) < 0)
					{
						strAddress = unescape (strAddress);
						if (PageIndexFromName (strAddress) < 0)
						{
							strAddress = strAddress.substring (0, strAddress.lastIndexOf ('/'));
						}
					}
				}

				var pageIndex = PageIndexFromName (strAddress);

				hlObj.DoFunction = "GoToPage (" + pageIndex + ");";
				strAddress = HTMLEscape (strAddress);
				hlObj.Desc = strAddress;
			}
		}

		hlDesc = SelectSingleNode(hlNode,"HLURL:Description/text()");
		if (hlDesc != null && hlDesc.nodeValue.length > 0)
		{
			hlObj.Desc = HTMLEscape (hlDesc.nodeValue);
		}
		else
		{
			hlObj.Desc = strAddress;
		}

		var hlNewWindow = SelectSingleNode(hlNode,"HLURL:NewWindow/text()");
		if (hlNewWindow != null && hlNewWindow.nodeValue.length > 0)
		{
			hlObj.NewWindow = (hlNewWindow.nodeValue == "1");
		}		
	}

	return hlObj;
}


		</script>
	</head>
	
	<frameset id="frmstOuter" cols="237,*">
		<frame src="Diagrama Proceso20 2.0_archivos/toolbar.htm" name="frmToolbar" id="frmToolbar" title="Este marco contiene herramientas para manipular el dibujo." frameborder="6" bordercolor="#999999" scrolling="yes" marginheight="0" marginwidth="0" >
		<frame src="Diagrama Proceso20 2.0_archivos/png_1.htm" name="frmDrawing" title="Este marco contiene las páginas del dibujo." marginheight="10" marginwidth="10" onload="if (parent.isUpLevel) FramePageLoaded()" >

		<noframes>
			<body>

				<h1>Diagrama Proceso20 2.0</h1>
				<ul>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_1.htm">Diagramas específicos Proceso20</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_2.htm">Form1_Load</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_3.htm">bMas_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_4.htm">listBox2_SelectedIndexChanged</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_5.htm">bcla_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_6.htm">listBox1_SelectedIndexChanged</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_7.htm">best_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_8.htm">boEsta_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_9.htm">boTodas_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_10.htm">bozoom_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_11.htm">boclaizq_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_12.htm">bocladil_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_13.htm">boclader_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_14.htm">boclaenc_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_15.htm">panelEsta_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_16.htm">butfech_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_17.htm">bopep_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_18.htm">panel1a_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_19.htm">panel1a_MouseMove</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_20.htm">panel1a_MouseUp</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_21.htm">panel1_MouseMove</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_22.htm">panel1_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_23.htm">panel1_MouseUp</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_24.htm">panelcladib_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_25.htm">panelcladib_MouseUp</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_26.htm">panelcladib_MouseMove</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_27.htm">boXcod_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_28.htm">panelAmp_MouseUp</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_29.htm">bovar_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_30.htm">boPSW_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_31.htm">boScilab_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_32.htm">boInv_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_33.htm">panel1_Paint</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_34.htm">panel1a_Paint</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_35.htm">Dibujo panelcoda</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_36.htm">panelAmp_Paint</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_37.htm">boFc_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_38.htm">boPolo_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_39.htm">boFiltro_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_40.htm">Filtros</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_41.htm">Filtros coda</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_42.htm">boClaSola_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_43.htm">boTremor_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_44.htm">boAnalogico_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_45.htm">boNano_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_46.htm">Form1_KeyPress</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_47.htm">backgroundWorker1_DoWork</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_48.htm">splitContainer1_Panel1_MouseUp</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_49.htm">checkBoxLogEsp_CheckedChanged</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_50.htm">Métodos Espectro</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_51.htm">boStartMpt_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_52.htm">Movimiento de partículas</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_53.htm">boModX_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_54.htm">boNeic_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_55.htm">textBoxNeic_TextChanged</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_56.htm">panelMapaMundo_Paint</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_57.htm">Botones de filtros</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_58.htm">boResFiltX_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_59.htm">botones rata de muestreo interpolación</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_60.htm">panelInterP_MouseUp</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_61.htm">casillas verificación para grabar trazas interpoladas</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_62.htm">boGraInterpol_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_63.htm">boIntegra_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_64.htm">checkBoxFiltAlta_CheckedChanged</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_65.htm">boFrInterp_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_66.htm">boFIR_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_67.htm">boFilBaj_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_68.htm">boFilAlt_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_69.htm">boFilBan_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_70.htm">boDerMpt_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_71.htm">boIzqMpt_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_72.htm">boEspCla_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_73.htm">panelDR_Paint</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_74.htm">panelDR_MouseUp</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_75.htm">boTarCarga_MouseDown</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_76.htm">checkBoxHz_CheckedChanged</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_77.htm">textBoxUT_TextChanged</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_78.htm">boTarAux_Click</a></li>
				<li><a href="Diagrama Proceso20 2.0_archivos/png_79.htm">Varios en común</a></li>

				</ul>
			</body>
		</noframes>
	</frameset>
	
</html>

